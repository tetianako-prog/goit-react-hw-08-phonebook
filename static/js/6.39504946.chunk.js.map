{"version":3,"sources":["redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Form/ContactForm.js","components/Filter/Filter.js","components/Contacts/ContactItem.js","components/Contacts/ContactList.js","views/ContactsPage.js"],"names":["operations","fetchContacts","dispatch","actions","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","error","fetchContactError","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","getFilter","state","contacts","filter","getAllContacts","items","selectors","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleNameChange","useCallback","e","value","currentTarget","handleNumberChange","handleSubmit","preventDefault","some","item","alert","Form","onSubmit","style","marginBottom","Group","controlId","Label","Control","className","type","pattern","title","required","onChange","Button","variant","Filter","filterContacts","target","filterId","v4","InputGroup","Text","id","FormControl","placeholder","ContactItem","info","onDeleteContact","ListGroup","Item","Row","Col","lg","onClick","ContactList","contactList","map","ContactsPage","isLoading","useEffect","Container","fluid","paddingTop","paddingBottom","display","justifyContent","Spinner","animation","role"],"mappings":"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","file":"static/js/6.39504946.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport actions from './phonebook-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactError(error)));\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(actions.addContactRequest());\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n      .catch(error => dispatch(actions.addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst operations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default operations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst selectors = {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getAllContacts,\r\n};\r\n\r\nexport default selectors;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(selectors.getAllContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  // const nameInputId = v4();\r\n  //const numberInputId = v4();\r\n\r\n  const handleNameChange = useCallback(e => {\r\n    const { value } = e.currentTarget;\r\n    setName(value);\r\n  }, []);\r\n\r\n  const handleNumberChange = useCallback(e => {\r\n    const { value } = e.currentTarget;\r\n    setNumber(value);\r\n  }, []);\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      if (contacts.some(item => item.name === name)) {\r\n        alert(`${name} is already in contacts`);\r\n      } else {\r\n        dispatch(operations.addContact({ name, number }));\r\n      }\r\n      reset();\r\n    },\r\n    [dispatch, contacts, name, number],\r\n  );\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} style={{ marginBottom: '40px' }}>\r\n      <Form.Group controlId=\"formBasicText\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicTel\">\r\n        <Form.Label>Number</Form.Label>\r\n        <Form.Control\r\n          className=\"input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <div className=\"text-center\">\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Add contact\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { useCallback } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/phonebook/phonebook-actions';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(selectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = useCallback(\r\n    e => dispatch(actions.filterContacts(e.target.value)),\r\n    [dispatch],\r\n  );\r\n  const filterId = v4();\r\n  return (\r\n    <div style={{ marginBottom: '40px' }}>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text id=\"basic-addon1\">\r\n          Find contacts by name\r\n        </InputGroup.Text>\r\n        <FormControl\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          id={filterId}\r\n          placeholder=\"Enter name\"\r\n        />\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import ContactItemStyled from './ContactItemStyled';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nconst ContactItem = ({ info: { name, number, id }, onDeleteContact }) => {\r\n  const deleteContact = () => {\r\n    onDeleteContact(id);\r\n  };\r\n  return (\r\n    <ListGroup.Item>\r\n      <Row>\r\n        <Col>\r\n          {name}: {number}\r\n        </Col>\r\n        <Col lg=\"3\">\r\n          <Button variant=\"danger\" onClick={deleteContact}>\r\n            Delete\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  info: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport ContactItem from './ContactItem';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nfunction ContactList() {\r\n  const contactList = useSelector(selectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = useCallback(\r\n    id => {\r\n      dispatch(operations.deleteContact(id));\r\n    },\r\n    [dispatch],\r\n  );\r\n  return (\r\n    <>\r\n      <ListGroup>\r\n        {contactList.map(item => (\r\n          <ContactItem\r\n            key={item.id}\r\n            info={item}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { useEffect } from 'react';\r\nimport Form from './../components/Form/ContactForm';\r\nimport Filter from './../components/Filter/Filter';\r\nimport ContactList from './../components/Contacts/ContactList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport selectors from '../redux/phonebook/phonebook-selectors';\r\nimport operations from '../redux/phonebook/phonebook-operations';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction ContactsPage() {\r\n  const isLoading = useSelector(selectors.getLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container\r\n      fluid=\"xl\"\r\n      style={{\r\n        paddingTop: '20px',\r\n        paddingBottom: '30px',\r\n      }}\r\n    >\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col lg=\"5\">\r\n          <h1>Phonebook</h1>\r\n          <Form />\r\n          <Filter />\r\n          {isLoading && (\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n          <ContactList />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}